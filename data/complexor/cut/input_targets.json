{
    "background": "This problem involves optimizing the number of raw rolls cut from a stock roll to meet specific width orders using various cutting patterns.",
    "constraints": [
        "Number of rolls cut for each width is non-negative",
        "Total number of rolls cut for each width i must meet or exceed Orders_i",
        "Number of rolls cut using each pattern j must be non-negative"
    ],
    "objective": "Minimize the total number of raw rolls cut to meet the orders",
    "description": "This is a cutting stock problem. Given a roll of width \\param{RollWidth} and a set of \\param{NumWidths} widths \\param{Widths} to be cut. Each width i has a certain number of orders \\param{Orders_i}. There are \\param{NumPatterns} patterns and each pattern j has a certain number of rolls of each width i \\param{NumRollsWidthPattern_{i,j}}. The problem aims to minimize the total number of raw rolls cut. It is constrained that for each width i, the total number of rolls cut meets the total orders. The decision to be made concerns how to decide the number of rolls cut using each pattern j.",
    "parameters": [
        {
            "symbol": "NumWidths",
            "definition": "The number of widths to be cut",
            "shape": []
        },
        {
            "symbol": "NumPatterns",
            "definition": "The total number of patterns",
            "shape": []
        },
        {
            "symbol": "Widths",
            "definition": "The set of widths to be cut from the roll",
            "shape": ["NumWidths"]
        },
        {
            "symbol": "RollWidth",
            "definition": "The width of the raw roll",
            "shape": []
        },
        {
            "symbol": "Orders",
            "definition": "The number of orders for each width",
            "shape": ["NumWidths"]
        },
        {
            "symbol": "NumRollsWidthPattern",
            "definition": "The number of rolls of each width i in each pattern j",
            "shape": ["NumWidths", "NumPatterns"]
        }
    ]
}
